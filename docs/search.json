[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "US Unemployment",
    "section": "",
    "text": "1 Introduction\nThe topic we chose to study is unemployment rate in the US. In particular, we are going to examine the trend of unemployment rate in recent years and characteristics of the unemployed (sex, race, age, marital status, etc.). We chose this topic because it is relevant to many of us who are currently working, applying to jobs, or soon entering the job market. Moreover, with inflation slowing down and recent rapid advancements in AI, we are interested in seeing how the job market is responding. Through our studies, we hope to answer the following questions:\n\nWhat is the general US unemployment rate trend over recent years?\nWere there any significant fluctuations in unemployment rate and what are possible explanations for those fluctuations?\nAre there any noticeable correlations between sex, race, age group, etc. with unemployment rate?\nWhat is trend of the unemployment rate for different sex, race, age groups, etc. over recent years?\n\nFor those unfamiliar with the topic, a country’s unemployment rate is the percentage of the country’s total labor force that is unemployed and actively seeking employment. The unemployment rate, along with many other indicators, can provide insight into how an economy is performing. In this study, we will also be examining the unemployment rate of particular groups to see if there is a significant difference in unemployment rate between different groups."
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nData Source\nAll of the unemployment rate data will be from the US Bureau of Labor Statistics website. The data is collected through the Current Population Survey (CPS), which is a monthly survey of households conducted by the Bureau of Census for the Bureau of Labor Statistics. There are many CPS tables on the linked website - we want our data to be similar to the following table.\n\nA-10. Unemployment rates by age, sex, and marital status, seasonally adjusted (monthly, seasonally adjusted)\n\nTime range: Oct 2022 - Oct 2023\nFrequency of update: monthly - the most recent update was for Oct 2023\nDimensions: month, age group, sex, marital status\n\nA-29. Unemployed persons by marital status, race, Hispanic or Latino ethnicity, age, and sex (Month over month, not seasonally adjusted)\n\nTime range: Oct 2022 and Oct 2023\nFrequency of update: monthly - the most recent update was for Oct 2023\nDimensions: month, sex, marital status, race, Hispanic or Latino ethnicity, age group\n\n\nData Import\nWe can not directly download the table listed above (BLS doesn’t provide CSV files of them. And they are also not API accessible). We need to reconstruct a data frame that has information similar to theirs. Therefore, we use BLS Api to extract unemployment rates of different demographic groups and merge all the data we get. When extracting data, we refer to LN series id list – Labor force statistics including the national unemployment rate and put the series_id of the information we need into the api query. (ie. we extract some of the data listed here by API) Moreover, we extract data from 2018 to 2023 (longer than the time ranges of the above listed tables), so that if we want to do some analysis regarding COVID-19, we have data to do so.\n\n\nCode\nknitr::opts_chunk$set(warning = FALSE)\nknitr::opts_chunk$set(message = FALSE)\n\n\n\n\nCode\nknitr::opts_chunk$set(fig.width=14, fig.height=16)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(stringr)\n\nall_df = read.table(\"data/ln.series.txt\", header = TRUE, sep = \"\\t\", stringsAsFactors = FALSE)\nall_df = all_df %&gt;%\n  filter(str_detect(series_title, \"Unemployment\"))%&gt;%\n  filter(!str_detect(series_title, \"Level\"))%&gt;%\n  filter(\n    absn_code == 0,\n    activity_code == 0,\n    cert_code == 0,\n    class_code == 0,\n    duration_code == 0,\n    education_code == 0,\n    entr_code == 0,\n    expr_code == 0,\n    hheader_code == 0,\n    hour_code == 0,\n    indy_code == 0,\n    jdes_code == 0,\n    look_code == 0,\n    mjhs_code == 0,\n    occupation_code == 0,\n    pcts_code == 0,\n    rjnw_code == 0,\n    rnlf_code == 0,\n    rwns_code == 0,\n    seek_code == 0,\n    vets_code == 0,\n    wkst_code == 0,\n    born_code == 0,\n    chld_code == 0,\n    disa_code == 0,\n    orig_code %in%c(0,1)\n  ) %&gt;%\n  filter(str_detect(series_id, \"LNS130|LNS140|LNU040\")) %&gt;%\n  mutate(race_code = if_else(orig_code == 1, 2, race_code)) %&gt;%\n  filter(race_code %in% c(0,1,2,3,4)) %&gt;%\n  filter(periodicity_code==\"M\") \nall_df$series_id &lt;- trimws(all_df$series_id)\n\n\n\n\nCode\nn &lt;- nrow(all_df) \nsize &lt;- ceiling(n / 12) \n\ngroups &lt;- rep(1:12, each = size)\ngroups &lt;- groups[1:n] \n\nsplit_dfs &lt;- split(all_df, groups)\nlist1 &lt;- split_dfs[1:4]\nlist2 &lt;- split_dfs[5:12]\n\n\n\n\nCode\n#install.packages(\"devtools\") \n#devtools::install_github(\"mikeasilva/blsAPI\") \nlibrary(rjson)\nlibrary(blsAPI)\nlibrary(ggplot2)\n\ndata &lt;- data.frame(\n  year = character(),\n  period = character(),\n  periodName = character(),\n  value = character(),\n  rate = logical(),\n  sex = character(),\n  race = character(),\n  age = character(),\n  marital = character(),\n  stringsAsFactors = FALSE\n)\n\n\n\n\nCode\n## Process results\napiDF &lt;- function(data,rate,series_title,sexs_code,race_code,ages_code,mari_code) {\n  sexs_value &lt;- if (sexs_code == 1) {\n    \"Men\"\n  } else if (sexs_code == 2) {\n    \"Women\"\n  } else {\n    \"Both\"\n  }\n  \n  race_value &lt;- if (race_code == 1) {\n    \"White\"\n  } else if (race_code == 2) {\n    \"Latino\"\n  } else if (race_code == 3) {\n    \"Black\"\n  } else if (race_code == 4) {\n    \"Asian\"\n  } else {\n    \"All\"\n  }\n   \n  ages_value &lt;- if (ages_code == 7) {\n    \"16-17\"\n  } else if (ages_code == 8) {\n    \"16-19\"\n  } else if (ages_code == 10) {\n    \"16-24\"\n  } else if (ages_code == 13) {\n    \"18-19\"\n  } else if (ages_code == 15) {\n    \"18-\"\n  } else if (ages_code == 17) {\n    \"20-\"\n  } else if (ages_code == 20) {\n    \"20-24\"\n  } else if (ages_code == 22) {\n    \"20-64\"\n  } else if (ages_code == 28) {\n    \"25-\"\n  } else if (ages_code == 30) {\n    \"25-29\"\n  } else if (ages_code == 31) {\n    \"25-34\"\n  } else if (ages_code == 33) {\n    \"25-54\"\n  } else if (ages_code == 36) {\n    \"30-34\"\n  } else if (ages_code == 37) {\n    \"35-39\"\n  } else if (ages_code == 38) {\n    \"35-44\"\n  } else if (ages_code == 39) {\n    \"40-44\"\n  } else if (ages_code == 40) {\n    \"45-\"\n  } else if (ages_code == 41) {\n    \"45-49\"\n  } else if (ages_code == 42) {\n    \"45-54\"\n  } else if (ages_code == 44) {\n    \"50-54\"\n  } else if (ages_code == 45) {\n    \"55-\"\n  } else if (ages_code == 48) {\n    \"55-59\"\n  } else if (ages_code == 49) {\n    \"55-64\"\n  } else if (ages_code == 56) {\n    \"60-61\"\n  } else if (ages_code == 57) {\n    \"60-64\" \n  } else if (ages_code == 61) {\n    \"62-64\"\n  } else if (ages_code == 65) {\n    \"65-\"\n  } else if (ages_code == 66) {\n    \"65-69\"\n  } else if (ages_code == 72) {\n    \"70-\"\n  } else if (ages_code == 73) {\n    \"70-74\"\n  } else if (ages_code == 78) {\n    \"75-\"\n  } else {\n    \"All\"\n  }\n  \n  mari_value &lt;- if (mari_code == 1) {\n    \"Never Married\"\n  } else if (mari_code == 2) {\n    \"Married, spouse present\"\n  } else if (mari_code == 9) {\n    \"Widdowed, divorced, or seperated\"\n  } else {\n    \"All\"\n  }\n  \n  df  &lt;- data %&gt;%\n          select(-footnotes,-latest) %&gt;%\n          mutate(rate, title=series_title, sex=sexs_value, race=race_value, age=ages_value, mari=mari_value)\n  return(df)\n}\n\n\n\n\nCode\nlibrary(jsonlite)\nfor (i in 1:4) {\n  current_df &lt;- list1[[i]]\n  ## Pull the data via the API\n  payload &lt;- list(\n    'seriesid'  = current_df$series_id,\n    'startyear' = 2018,\n    'endyear'   = 2023,\n    'registrationKey'='9e0f46de2cb9444b808f4b26131459ce') #38573dc63f3d4016a425126b9e52903e\n  response &lt;- blsAPI(payload, 2)\n  json     &lt;- jsonlite::fromJSON(response)\n  for (j in 1:nrow(current_df)) {\n  single_data  &lt;- apiDF(json$Results$series$data[[j]], series_title=current_df[j,]$series_title, rate=TRUE, sexs_code=current_df[j,]$sexs_code, race_code=current_df[j,]$race_code, ages_code=current_df[j,]$ages_code, mari_code =current_df[j,]$mari_code)\n  data&lt;- rbind(data, single_data)\n  }\n}\n\n\n\n\nCode\nfor (i in 1:8) {\n  current_df &lt;- list2[[i]]\n  ## Pull the data via the API\n  payload &lt;- list(\n    'seriesid'  = current_df$series_id,\n    'startyear' = 2018,\n    'endyear'   = 2023,\n    'registrationKey'='38573dc63f3d4016a425126b9e52903e') \n  response &lt;- blsAPI(payload, 2)\n  json     &lt;- jsonlite::fromJSON(response)\n  \n  for (j in 1:nrow(current_df)) {\n  single_data  &lt;- apiDF(json$Results$series$data[[j]], series_title=current_df[j,]$series_title, rate=TRUE, sexs_code=current_df[j,]$sexs_code, race_code=current_df[j,]$race_code, ages_code=current_df[j,]$ages_code, mari_code =current_df[j,]$mari_code)\n  data&lt;- rbind(data, single_data)\n  }\n}\n\n\n\n\nCode\nlibrary(readr)\nwrite_csv(data, \"data/data.csv\")\n\n\n\n\nCode\nhead(data)\n\n\n  year period periodName value rate                    title  sex race age mari\n1 2023    M10    October   3.9 TRUE (Seas) Unemployment Rate Both  All All  All\n2 2023    M09  September   3.8 TRUE (Seas) Unemployment Rate Both  All All  All\n3 2023    M08     August   3.8 TRUE (Seas) Unemployment Rate Both  All All  All\n4 2023    M07       July   3.5 TRUE (Seas) Unemployment Rate Both  All All  All\n5 2023    M06       June   3.6 TRUE (Seas) Unemployment Rate Both  All All  All\n6 2023    M05        May   3.7 TRUE (Seas) Unemployment Rate Both  All All  All"
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research Plan",
    "text": "2.2 Research Plan\nThe dataset we constructed from the previous part contains monthly unemployment rates from 2018 to 2023 broken down by sex, race, age, and marital status. This will enable us to answer our research questions from the introduction.\n\nWhat is the general US unemployment rate trend over recent years?\nWe can answer this by calculating the average unemployment rate of all the groups for each quarter and creating a line graph to see the quarterly trend over time. We can also calculate the average unemployment rate per month and per year to see if there are any monthly or yearly trends. We can use a smoother to observe the overall long-term trend.\nWere there any significant fluctuations in unemployment rate and what are possible explanations for those fluctuations?\nTo answer this question, we can use the same plots from question 1 and see if there are any noticeable dips or hikes in unemployment rate from month to month, quarter to quarter, and year to year.\nAre there any noticeable correlations between sex, race, age group, etc. with unemployment rate? To answer this question, we can calculate the average unemployment rate for each category of the categorical variables and see if there is a significant difference. For example, we can calculate the average unemployment rate for male and female and see if there is a significant difference between the two groups. To see whether there is a combined effect of two or more groups on unemployment rate (ex. is unemployment rate higher for white males than black females), we can use various visualization techniques for categorical variables from class such as mosaic plots.\nWhat is trend of the unemployment rate for different sex, race, age groups, etc. over recent years? We can answer this by creating separate time series plots for each group from 2018 to 2023 and observe if there are any monthly, quarterly, and yearly trends."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\n\n\nCode\nlibrary(tidyr)\ndata1 = data %&gt;%\n  mutate(time = str_c(year, \" \",period)) %&gt;%\n  select(time, title, value)\n\n\n\n\nCode\nlibrary(forcats)\n# for a better visualization result, we give each group's tiltle a code to avoid printing out all 530 group titles on the x-axis\ndata2 = data1 %&gt;%\n  mutate(value = as.numeric(value)) %&gt;%\n  mutate(missing=ifelse(is.na(value), \"yes\", \"no\")) %&gt;%\n  mutate(case = as.numeric(factor(title)))\nggplot(data2, aes(x=case, y=fct_rev(time), fill=missing))+\n  geom_tile(color=\"white\")+\n  scale_fill_viridis_d()+\n  scale_x_continuous(breaks = seq(min(data2$case), max(data2$case), by = 10))+\n  theme_bw()+\n  theme(axis.text.y = element_text(size = rel(1.5)),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, size = rel(1.5))) +\n  labs(x = \"Group\", y = \"Time\")\n\n\n\n\n\n\n\nCode\ndata3 = data2 %&gt;%\n  mutate(missingval=ifelse(missing==\"no\",0,1)) %&gt;%\n  group_by(title)%&gt;%\n  mutate(summissval=sum(missingval)) %&gt;%\n  ungroup()\n\ndata3 = data3 %&gt;%\n  filter(summissval&gt;0)\nggplot(data3, aes(x=substr(title, 8, nchar(title)), y=fct_rev(time), fill=missing))+\n  geom_tile(color=\"white\")+\n  scale_fill_viridis_d()+\n  theme_bw()+\n  theme(axis.text.y = element_text(size = rel(1.5)),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, size = rel(1.5))) +\n   labs(x = \"Group Title\", y = \"Time\")\n\n\n\n\n\nWe find no NAs in most cases. But in some cases, data is not recorded every month. For example, (Unadj) Unemployment Rate - 16-17 yrs., Asian is recorded approximately four times a year, but the months it is recorded seem randomly selected. Overall, we find no evidence that missing months of different unemployment rates are associated with each other."
  }
]